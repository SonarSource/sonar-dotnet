<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK6QAA
        CukB/XXO0wAAAepJREFUOE+lkktIG1EUhkeFaLQ+UGulgthNEUHRCrqyIHZTdSd0Iyq46cL3Sly50ppV
        uywYi2uDiyKK1ioFk0lm7mSmSgymJuIqSkwwCTVpGs3fM0Pa+poWceBj4N5zvnvOuZcDwN2HeyWrB98Q
        LFosuRJjz51O6cXmxsaj/1V3RSAx8fVXRQnIsgwVRZHjJHr7L8kfAROFPoWS3G43gicnCIVC8O7vQ11z
        StKsnkQTrK6sGCSJBXddLpyfJ5FKpTTUz+f1gvbA22w1t0k0AW3WCYIAv9+PZPIn4vGYRiLxA+HwKRhj
        EByOIV2BdWur3mG34/j4iJISiEYjRBSx2BkikQiYKOJQ4ft1BZ/X13NIEHalW1CrUEVACj6fF4yqe2W2
        TegK0m0MiBSoziEQCNAQg/B4PPi2I8Fk+QJucBnZI0vvrkuuXCPP8+PU63dC7RnbTvHi/cKnA2O3GYbu
        OeT0ziOv58Na8djHgt+iGw+JHk+pzWrtpMF27cn2Ko7jMnLbTebCl1MoaH+D/I4ZFHbM7FZ0ThtvfYl6
        913WMjFc2jyGkqZRlNC/om2yXBNk0RFEEfGEqCZqiXriGdGYpoHCHhdXtg6W1fQKD592mQwZ3N8KKCiL
        yCaMRB7xgMi/zuXqMinnTi3otfYLj6yxrhdJtZ8AAAAASUVORK5CYII=
</value>
  </data>
</root>