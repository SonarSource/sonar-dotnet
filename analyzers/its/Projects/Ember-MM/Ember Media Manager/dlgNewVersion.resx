<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        7QgYlhRj4gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABY
        W4dkZo0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbIIdGSpUaIIodIotITJYbIIgA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABucrkUGokZH44ZH4wZH4wZH44UGol8gMAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAQFo8WHJIaH5QZH5MYHpMZHpMZH5QaH5QWHJIQFo8AAAAAAAAAAAAAAAAAAAAAAAAS
        GJcaH5sUG5kaIJslKqAiJ50XHZkXHZoYH5oYHpkAAAAAAAAAAAAAAAAAAACZnNYXHqJ+gsScntKgos6u
        sNtna72bnc+Hi8llabgOFZ6jptoAAAAAAAAAAAAAAAAdI6sXHanIyue6u9m1t9W4ut+ChcrS0+Xk5e2R
        k8YNFKMyN7IAAAAAAAAAAAAAAAAAAAAUG69zd8s/RLd0eMeZnNyMj9RiZsF0eMleYr4WHawAAAAAAAAA
        AAAAAAAAAAAAAAATG7gRGLUWHrgSGbcPF7URGLYTG7cSGbYTGbcXILoAAAAAAAAAAAAAAAAAAAAAAABh
        adcnMccaIcAbIsAbI8EbI8EbIsAaIsAqNchnb9kAAAAAAAAAAAAAAAAAAAAAAAAAAACTmOcWH8gcJcoa
        IccbIsgcJcoXIMinq+sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACBiOYAAAA1P9ZAStkAAAB/heUA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//6xB//+sQf5/
        rEH4H6xB8A+sQeAHrEHgB6xBwAOsQcADrEHgB6xB4AesQeAHrEHwD6xB+l+sQf//rEH//6xB
</value>
  </data>
</root>