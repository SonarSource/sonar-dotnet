{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Microsoft (R) Visual C# Compiler",
        "version": "1.3.1.0",
        "fileVersion": "1.3.1.60616",
        "semanticVersion": "1.3.1",
        "language": "en-GB"
      },
      "results": [
        {
          "ruleId": "S1764",
          "level": "warning",
          "message": "Identical sub-expressions on both sides of operator \"==\".",
          "locations": [
            {
              "resultFile": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 35,
                  "endLine": 28,
                  "endColumn": 52
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS9999",
          "level": "warning",
          "message": "External file level issue",
          "locations": [
            {
              "resultFile": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 3
          }
        },
        {
          "ruleId": "S3776",
          "level": "warning",
          "message": "Refactor this top-level file to reduce its Cognitive Complexity from 1 to the 0 allowed.",
          "locations": [
            {
              "resultFile": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 1,
                  "startColumn": 1,
                  "endLine": 1,
                  "endColumn": 1
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "%BASEDIR%Foo.cs",
                "region": {
                  "startLine": 28,
                  "startColumn": 14,
                  "endLine": 28,
                  "endColumn": 31
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1,
            "customProperties": {
              "0": "+1"
            }
          }
        }
      ],
      "rules": {
        "S1764": {
          "id": "S1764",
          "shortDescription": "Identical expressions should not be used on both sides of a binary operator",
          "fullDescription": "Using the same value on either side of a binary operator is almost always a mistake. In the case of logical operators, it is either a copy/paste error and therefore a bug, or it is simply wasted code, and should be simplified. In the case of bitwise operators and most binary mathematical operators, having the same value on both sides of an operator yields predictable results, and should be simplified.",
          "defaultLevel": "warning",
          "helpUri": "http://vs.sonarlint.org/rules/index.html#version=1.23.0.0&ruleId=S1764",
          "properties": {
            "category": "Sonar Bug",
            "isEnabledByDefault": true
          }
        },
        "CS9999": {
          "id": "CS9999",
          "shortDescription": "External analyzer's file level rule",
          "fullDescription": "External analyzer's file level rule",
          "defaultLevel": "warning",
          "properties": {
            "category": "External Issue",
            "isEnabledByDefault": true
          }
        },
        "S3776": {
          "id": "S3776",
          "shortDescription": "Cognitive Complexity of methods should not be too high",
          "fullDescription": "Cognitive Complexity is a measure of how hard the control flow of a method is to understand. Methods with high Cognitive Complexity will be difficult to maintain.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3776",
          "properties": {
            "category": "Critical Code Smell",
            "isEnabledByDefault": false,
            "tags": [
              "C#",
              "SonarWay",
              "MainSourceScope",
              "TestSourceScope"
            ]
          }
        }
      }
    }
  ]
}